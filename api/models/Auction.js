// Generated by CoffeeScript 1.7.1
var mkdirp, _;

_ = require("underscore");

mkdirp = require('mkdirp');

module.exports = {
  schema: true,
  types: {
    arrayMinLen: function(arr, len) {
      return _.isArray(arr) && arr.length >= len;
    },
    arrayMaxLen: function(arr, len) {
      return (!_.isArray(arr)) || (_.isArray(arr) && arr.length <= len);
    },

    /*
    Checks if images are exists in tmp dir (i.e. if they were uploaded before via AJAX)
     */
    imagesValid: function(images) {
      var image, valid, _i, _len;
      valid = 0;
      for (_i = 0, _len = images.length; _i < _len; _i++) {
        image = images[_i];
        if (fs.existsSync("" + sails.config.app.tmpDir + "/" + image)) {
          valid++;
        }
      }
      if (valid === 0) {
        return false;
      } else {
        return true;
      }
    }
  },
  attributes: {
    title: {
      required: true,
      maxLength: 100
    },
    description: {
      required: true
    },
    startPrice: {
      required: true,
      type: "decimal",
      min: 0.01
    },
    retailerPrice: {
      required: true,
      type: "decimal",
      min: 0.01
    },
    startsAt: {
      required: true,
      type: "datetime"
    },
    expiresAt: {
      required: true,
      type: "datetime"
    },
    images: {
      required: true,
      type: "array",
      arrayMinLen: 1,
      arrayMaxLen: 6,
      imagesValid: true
    },
    toJSON: function(jsonFormat) {
      var data;
      data = this.toObject();
      if (jsonFormat === "jsonapi") {
        data = {
          "auction": data
        };
      }
      return data;
    }
  },
  afterValidate: function(auction, next) {
    var image, validImages, _i, _len, _ref;
    validImages = [];
    _ref = auction.images;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      image = _ref[_i];
      if (fs.existsSync("" + sails.config.app.tmpDir + "/" + image)) {
        validImages.push(image);
      }
    }
    auction.images = validImages;
    return next(null, auction);
  },

  /*
    After auction was created in DB, copy valid images to auctions dir
  
    NOTE: images were validated by imagesValid rule so all images in DB should be existing
   */
  afterCreate: function(newAuction, next) {
    var auctionImagesDir;
    auctionImagesDir = "" + sails.config.app.baseDir + "/uploads/auctions/" + newAuction.id;
    return mkdirp(auctionImagesDir, function(err) {
      var image, tmpImage, _i, _len, _ref;
      if (err) {
        return next(err);
      } else {
        _ref = newAuction.images;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          image = _ref[_i];
          tmpImage = "" + sails.config.app.tmpDir + "/" + image;
          fs.createReadStream(tmpImage).pipe(fs.createWriteStream("" + auctionImagesDir + "/" + image));
          fs.unlink(tmpImage);
        }
        return next();
      }
    });
  }
};
