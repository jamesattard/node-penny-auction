// Generated by CoffeeScript 1.7.1

/*
201 (CREATED) Response

Usage:
return res.created();
return res.created(data);
return res.created(data, view);
return res.created(data, redirectTo);
return res.created(data, true);

@param  {Object} data
@param  {Boolean|String} viewOrRedirect
[optional]
- pass string to render specified view
- pass string with leading slash or http:// or https:// to do redirect
 */
var sendCreated;

module.exports = sendCreated = function(data, viewOrRedirect) {
  var locals, req, res, sendJSON, viewReady;
  console.log("created!");
  sendJSON = function(data) {
    if (req.options.jsonp && !req.isSocket) {
      return res.jsonp(data);
    } else {
      return res.json(data);
    }
  };
  req = this.req;
  res = this.res;
  res.status(201);
  this.req._sails.log.verbose("Sent 201 (\"Created\") response");
  if (data) {
    this.req._sails.log.verbose(data);
  }
  if (req.wantsJSON) {
    return sendJSON(data);
  }
  locals = void 0;
  if (!data || typeof data !== "object") {
    locals = {};
  } else {
    locals = data;
  }
  if (typeof viewOrRedirect === "string") {
    if (viewOrRedirect.match(/^(\/|http:\/\/|https:\/\/)/)) {
      return res.redirect(viewOrRedirect);
    } else {
      return res.view(viewOrRedirect, locals, viewReady = function(viewErr, html) {
        if (viewErr) {
          return sendJSON(data);
        } else {
          return res.send(html);
        }
      });
    }
  } else {
    return res.view(locals, viewReady = function(viewErr, html) {
      if (viewErr) {
        return sendJSON(data);
      } else {
        return res.send(html);
      }
    });
  }
};
