// Generated by CoffeeScript 1.7.1
var BaseAssets, CssAssets, JsAssets, fs, nap,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

nap = require('nap');

fs = require('fs');

exports.Assets = (function() {
  function Assets() {
    this.js = new JsAssets;
    this.css = new CssAssets;
  }

  Assets.factory = function() {
    return new Assets;
  };

  Assets.prototype.compile = function() {
    var cssFileName, cssFilePath, jsFileName, jsFilePath;
    nap({
      appDir: process.cwd(),
      publicDir: "public",
      mode: (process.env.NODE_ENV === "production" ? "production" : "development"),
      minify: true,
      uglifyOpts: {
        mangle: false
      },
      assets: {
        js: {
          all: this.js.getAll()
        },
        css: {
          all: this.css.getAll()
        }
      }
    });
    if (process.env.NODE_ENV === "production") {
      cssFileName = "all-" + nap.fingerprintForPkg('css', 'all') + ".css";
      cssFilePath = "" + (process.cwd()) + "/public/assets/" + cssFileName;
      jsFileName = "all-" + nap.fingerprintForPkg('js', 'all') + ".js";
      jsFilePath = "" + (process.cwd()) + "/public/assets/" + jsFileName;
      console.log('*******------+++++++++++++++++', cssFilePath, jsFilePath);
      if (!(fs.existsSync(cssFilePath) && fs.existsSync(jsFilePath))) {
        nap["package"]();
      }
    }
    return this;
  };

  Assets.prototype.renderCss = function() {
    return nap.css('all');
  };

  Assets.prototype.renderJs = function() {
    return nap.js('all');
  };

  return Assets;

})();

BaseAssets = (function() {
  function BaseAssets() {
    this._files = [];
    this._urls = [];
  }

  BaseAssets.prototype.getAll = function() {
    return this._files;
  };

  return BaseAssets;

})();

JsAssets = (function(_super) {
  __extends(JsAssets, _super);

  function JsAssets() {
    JsAssets.__super__.constructor.apply(this, arguments);
  }

  JsAssets.prototype.addFile = function(inFile) {
    this._files.push("/public/javascripts/" + inFile + ".js");
    return this;
  };

  return JsAssets;

})(BaseAssets);

CssAssets = (function(_super) {
  __extends(CssAssets, _super);

  function CssAssets() {
    CssAssets.__super__.constructor.apply(this, arguments);
  }

  CssAssets.prototype.addFile = function(inFile) {
    this._files.push("/public/stylesheets/" + inFile + ".css");
    return this;
  };

  return CssAssets;

})(BaseAssets);
